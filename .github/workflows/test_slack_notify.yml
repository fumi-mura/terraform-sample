name: Notify Slack with Thread per PR

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1. GitHub App Token を取得
      - name: Create GitHub App token
        id: app_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.TERRAFORM_GITHUB_APP_ID }}
          private-key: ${{ secrets.TERRAFORM_GITHUB_PRIVATE_KEY }}

      # 2. PR コメントから thread_ts を取得
      - name: Get thread_ts from PR comments
        id: read_thread
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          repo="${{ github.repository }}"

          echo "Fetching thread_ts from PR #$pr_number comments..."

          thread_ts=$(gh pr view "$pr_number" --repo "$repo" --json comments 2>/dev/null \
            | jq -r '.comments[]?.body // empty' 2>/dev/null \
            | grep -oE '<!-- slack_thread_ts: [0-9]+\.[0-9]+ -->' 2>/dev/null \
            | tail -n1 \
            | grep -oE '[0-9]+\.[0-9]+' 2>/dev/null || true)

          if [[ -n "$thread_ts" ]]; then
            echo "thread_ts=$thread_ts" >> "$GITHUB_OUTPUT"
            echo "Found existing thread_ts: $thread_ts"
          else
            echo "thread_ts=" >> "$GITHUB_OUTPUT"
            echo "No thread_ts found"
          fi

      # 3. thread_ts がない場合は Slack に新規投稿
      - name: Post to Slack (initial message)
        id: slack_post
        if: steps.read_thread.outputs.thread_ts == ''
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              channel: ${{ secrets.SLACK_CHANNEL_ID }},
              text: "PR #${{ github.event.pull_request.number }} が作成されました！\n\n:page_facing_up: *Title:* <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>\n:hash: *Commit:* <${{ github.event.pull_request.head.repo.html_url }}/commit/${{ github.event.pull_request.head.sha }}|${{ github.event.pull_request.head.sha }}>\n:gear: *Actions URL:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions>\n:information_source: *Event:* ${{ github.event.action }}"
            }

      # 4. thread_ts を PR にコメント(新規メッセージのみ)
      - name: Save thread_ts to PR comment
        if: steps.read_thread.outputs.thread_ts == ''
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          repo="${{ github.repository }}"
          thread_ts="${{ steps.slack_post.outputs.ts }}"

          echo "Saving thread_ts to PR comment..."
          gh pr comment "$pr_number" \
            --repo "$repo" \
            --body "<!-- slack_thread_ts: $thread_ts -->"

      # 5. スレッドに投稿
      - name: Post to Slack thread
        uses: slackapi/slack-github-action@v2.1.0
        # env:
        #   PR_TITLE: ${{ github.event.pull_request.title }}
        #   PR_URL: ${{ github.event.pull_request.html_url }}
        #   COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        #   COMMIT_URL: ${{ github.event.pull_request.head.repo.html_url }}/commit/${{ github.event.pull_request.head.sha }}
        #   ACTIONS_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        #   EVENT_ACTION: ${{ github.event.action }}
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              channel: ${{ secrets.SLACK_CHANNEL_ID }},
              thread_ts: ${{ steps.read_thread.outputs.thread_ts || steps.slack_post.outputs.ts }},
              text: "PR #${{ github.event.pull_request.number }} が作成されました！\n
              :page_facing_up: *Title:* <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>\n
              :hash: *Commit:* <${{ github.event.pull_request.head.repo.html_url }}/commit/${{ github.event.pull_request.head.sha }}|${{ github.event.pull_request.head.sha }}>\n
              :gear: *Actions URL:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions>\n
              :information_source: *Event:* ${{ github.event.action }}",
              "unfurl_links": false,
              "unfurl_media": false
            }
