name: Notify Slack with Thread per PR (via GitHub App Token)

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1. GitHub App トークンを取得
      - name: Create GitHub App token
        id: app_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.TERRAFORM_GITHUB_APP_ID }}
          private-key: ${{ secrets.TERRAFORM_GITHUB_PRIVATE_KEY }}

      # 2. PR コメントから thread_ts を取得
      - name: Get thread_ts from PR comments
        id: read_thread
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          repo="${{ github.repository }}"
          owner=$(echo "$repo" | cut -d'/' -f1)
          repo_name=$(echo "$repo" | cut -d'/' -f2)

          echo "Fetching thread_ts from PR #$pr_number comments via REST API..."

          comments=$(gh api repos/$owner/$repo_name/issues/$pr_number/comments)

          thread_ts=$(echo "$comments" | jq -r '.[].body' \
            | grep -oE '<!-- slack_thread_ts: [0-9]+\.[0-9]+ -->' \
            | tail -n1 \
            | grep -oE '[0-9]+\.[0-9]+')

          if [[ -n "$thread_ts" ]]; then
            echo "thread_ts=$thread_ts" >> "$GITHUB_OUTPUT"
            echo "Found existing thread_ts: $thread_ts"
          else
            echo "thread_ts=" >> "$GITHUB_OUTPUT"
            echo "No thread_ts found"
          fi

      # 3. thread_ts がない場合は Slack に新規投稿
      - name: Post to Slack (initial message)
        id: slack_post
        if: steps.read_thread.outputs.thread_ts == ''
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "text": ":sparkles: PR #${{ github.event.pull_request.number }} が更新されました！"
            }

      # 4. thread_ts を PR にコメント保存（新規メッセージのみ）
      - name: Save thread_ts to PR comment
        if: steps.read_thread.outputs.thread_ts == ''
        env:
          GH_TOKEN: ${{ steps.slack_post.outputs.ts && steps.app_token.outputs.token }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          repo="${{ github.repository }}"
          thread_ts="${{ steps.slack_post.outputs.ts }}"

          echo "Saving thread_ts to PR comment..."
          gh pr comment "$pr_number" \
            --repo "$repo" \
            --body "<!-- slack_thread_ts: $thread_ts -->"

      # 5. スレッドに返信
      - name: Post to Slack thread
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "thread_ts": "${{ steps.read_thread.outputs.thread_ts || steps.slack_post.outputs.ts }}",
              "text": ":white_check_mark: GitHub Actions が実行されました（成功 or 失敗）"
            }
